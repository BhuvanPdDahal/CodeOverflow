// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id            String     @id @default(auto()) @map("_id") @db.ObjectId
    name          String
    email         String     @unique
    username      String     @unique @default(uuid())
    image         String?
    password      String?
    emailVerified DateTime?
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    accounts      Account[]
    Question      Question[]
    Vote          Vote[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

enum VoteType {
    UP
    DOWN
}

model Vote {
    id         String @id @default(auto()) @map("_id") @db.ObjectId
    voterId    String @db.ObjectId
    questionId String @db.ObjectId

    voter    User     @relation(fields: [voterId], references: [id], onDelete: Cascade)
    Question Question @relation(fields: [questionId], references: [id])
}

model Question {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    askerId     String   @db.ObjectId
    title       String
    details     String
    expectation String
    tags        String
    views       String[] @default([])
    votesIds    String[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    asker User   @relation(fields: [askerId], references: [id], onDelete: Cascade)
    votes Vote[]
}
